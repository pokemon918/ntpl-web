{
	"name": "ntbl-web-app",
	"version": "3.0.1",
	"private": true,
	"license": "LICENCE.md",
	"scripts": {
		"start": "yarn install --frozen-lockfile && react-scripts start ",
		"serve": "serve -s -l 3000 ./build",
		"e2e": "yarn test-e2e --headed",
		"e2e-one": "yarn e2e --no-exit --spec",
		"test": "yarn test-unit && yarn test-e2e",
		"test-unit": "yarn test-jest -u",
		"test-e2e": "yarn cypress-ok && yarn cypress",
		"cypress": "cypress run --project ./test/e2e/",
		"cypress-ok": "shx which cypress || (echo 'Please install cypress using `yarn global add cypress`' && exit 1)",
		"build": "run-s build-local insert-info",
		"build-local": "react-scripts build",
		"build-prod": "(git diff-index --quiet HEAD || (echo Please commit or stash changes && exit 1)) && yarn bump patch && (shx rm -r build-prod/ || true) && yarn build && yarn upload-sourcemaps --delete && rr '^[^;]+sourceMappingURL=[^;]+.map[^;]*$' '' './build/**/*.{js,css}' && mv build/ build-prod/ && mv build-prod/index.php build-prod/app.php && open ./build-prod/",
		"upload-sourcemaps": "node process/source-maps.js",
		"test-ci": "yarn test-format && yarn test-unit && yarn build && (yarn serve & sleep 1) && yarn test-e2e-ci",
		"test-local": "yarn serve & sleep 1 && yarn test",
		"test-jest": "CI=true TZ=UTC react-scripts test --coverage --colors --env=jsdom",
		"test-jest:watch": "TZ=UTC react-scripts test --coverage --colors --env=jsdom",
		"test-format": "yarn pretty-since-dev --list-different || echo 'Please correct file formatting using `yarn format` and try again.'",
		"test-e2e-testsite": "yarn test-e2e --env API_URL=https://test2-api.ntbl.link,APP_URL=http://test.ntbl.link",
		"test-e2e-ci": "yarn test-e2e --env API_URL=http://ci-api.ntbl.link",
		"storybook": "start-storybook -p 9009 -s public",
		"build-storybook": "build-storybook -s public",
		"bump": "yarn is-git-clean && bump --tag 'v%s'",
		"insert-info": "run-s insert-commit insert-version insert-branch insert-tags insert-build insert-datetime",
		"insert-version": "rexreplace '__VERSION__' 'require(`./package.json`).version' -jI './build/**/*.{js,map}*'",
		"insert-commit": "git rev-parse --short HEAD      | rr '__COMMIT__' '_' -RIT './build/**/*.{js,map}*'",
		"insert-branch": "git rev-parse --abbrev-ref HEAD | rr '__BRANCH__' '_' -RIT './build/**/*.{js,map}*'",
		"insert-build": "rr '__BUILD__' \"$BITBUCKET_BUILD_NUMBER\" -I './build/**/*.{js,map}*'",
		"insert-datetime": "rr '__DATETIME__' '(new Date).toISOString().replace(/T|:[^:]+$/g,` `).trim()' -Ij './build/**/*.{js,map}*'",
		"insert-tags": "yarn insert-tags-git-v2 || rexreplace '__TAGS?__' '' -I './build/**/*.{js,map}*'",
		"insert-tags-git-v2": "git tag --points-at head | tail -n1 | rr '__TAGS?__' '_' -RIT './build/**/*.{js,map}*'",
		"fmt": "yarn pretty-commit --write",
		"format": "yarn pretty-since-dev --write",
		"format-all": "yarn pretty-all --write",
		"pretty-since-dev": "{ git diff --name-only --diff-filter=d origin/develop ; git diff --name-only --diff-filter=d --staged origin/develop ; } | sort | uniq | grep -E '\\.(scss|css|js|ts|vue|html|json|jsx|tsx)$' | xargs prettier",
		"pretty-commit": "{ git diff --name-only  --diff-filter=d ; git diff --name-only  --diff-filter=d --staged ; } | sort | uniq | grep -E '\\.(scss|css|js|ts|vue|html|json|jsx|tsx)$' | xargs prettier",
		"pretty-all": "git ls-tree --full-tree --name-only -r HEAD | grep -E '\\.(scss|css|js|ts|vue|html|json|jsx|tsx)$' | xargs prettier",
		"deploy2test": "yarn is-git-clean && git push && git tag 'deploy2test-r'\"$(git tag -l 'deploy2test*' | wc -l | xargs)\" && git push origin --no-verify --tags #",
		"push": "git push --force-with-lease && git push --no-verify --tags #",
		"pull-hard": "yarn is-git-clean && git-branch-is '^(release|master|hotfix|develop)' -riq || (git-branch-is --not '^(release|master|hotfix|develop)' && git fetch && git reset --hard $(git merge-base head $(git for-each-ref --format='%(upstream:short)' $(git symbolic-ref -q HEAD))) && git pull)",
		"rebase": "yarn is-git-clean && git-branch-is '^(release|master|hotfix|develop)' -riq || (git-branch-is --not '^(release|master|hotfix|develop)' && (git fetch || 1) && git rebase origin/develop)",
		"repush": "yarn rebase && yarn push",
		"amend": "git reset --soft HEAD~1 && sleep 1 && git add --all && git commit --file .git/COMMIT_EDITMSG # This works with husky hooks",
		"tagit": "git tag \"$(git rev-parse --abbrev-ref HEAD | awk -F  '/' '{print $NF}')\"'-r'\"$(git tag -l \"$(git rev-parse --abbrev-ref HEAD | awk -F  '/' '{print $NF}')\"'*' | wc -l | xargs)\" && git push origin --no-verify --tags #",
		"save": "cmdmix 'git add --all && git commit -am \"%1\"'",
		"add": "git add --all",
		"goto": "git fetch & git checkout",
		"todo": "git ls-tree --full-tree --name-only -r head | xargs grep -inEro '\\Wtodo[ :].*'",
		"tofix": "git ls-tree --full-tree --name-only -r HEAD | xargs grep -lrE '<{5,}' #",
		"next": "git add --all && git rebase --continue #",
		"fresh": "yarn is-git-clean && cmdmix 'yarn goto '%1' && yarn pull-hard'",
		"pre-pr": "cmdmix 'yarn fresh '%1' && yarn repush'",
		"is-git-clean": "(git diff --quiet --exit-code --cached && git diff --quiet --exit-code) || (echo Please commit or stash changes && exit 1)",
		"sync2master": "git fetch && git checkout master && git rebase origin/master && git checkout develop && git rebase origin/develop && git rebase master && yarn push && git checkout master && git merge develop --ff-only && echo No yarn bump patch && git push && git checkout develop && git rebase master && yarn push"
	},
	"dependencies": {
		"@bugsnag/browser": "^6.3.2",
		"@bugsnag/js": "^6.0.0",
		"@bugsnag/plugin-react": "^6.0.0",
		"@formatjs/intl-pluralrules": "^1.3.9",
		"@formatjs/intl-relativetimeformat": "^4.5.1",
		"@redux-offline/redux-offline": "^2.6.0",
		"autosuggest-highlight": "^3.1.1",
		"await-to-js": "^2.1.1",
		"classnames": "^2.2.6",
		"core-js": "^3.1.2",
		"date-fns": "^1.30.1",
		"export-to-csv": "^0.2.1",
		"formik": "^1.5.8",
		"glob": "^7.1.4",
		"hi-base32": "^0.5.0",
		"intl-polyfill": "^0.0.3",
		"js-sha3": "0.8.0",
		"jsonh": "0.0.6",
		"lodash": "^4.17.15",
		"lodash.debounce": "^4.0.8",
		"mdbreact": "4.7.0",
		"node-fetch": "^2.6.1",
		"node-sass-chokidar": "^1.3.3",
		"papaparse": "^5.0.0",
		"pbkdf2": "^3.0.16",
		"query-string": "^6.8.2",
		"rc-slider": "^8.6.13",
		"react": "^16.8.5",
		"react-autosuggest": "^9.4.2",
		"react-beautiful-dnd": "^11.0.5",
		"react-date-picker": "^7.8.0",
		"react-datepicker": "^2.8.0",
		"react-dom": "^16.8.5",
		"react-ga": "^2.6.0",
		"react-genie": "^0.1.4",
		"react-hook-form": "^5.7.2",
		"react-icons": "^3.7.0",
		"react-input-mask": "^2.0.4",
		"react-intl": "^3.9.2",
		"react-number-format": "^4.3.1",
		"react-redux": "^5.0.7",
		"react-router": "^5.0.1",
		"react-router-dom": "^5.0.1",
		"react-scripts": "^3.0.1",
		"react-select": "^3.0.4",
		"react-textarea-autosize": "^7.0.4",
		"react-tooltip": "^3.11.2",
		"redux": "^4.0.0",
		"redux-devtools-extension": "^2.13.2",
		"redux-logger": "^3.0.6",
		"redux-mock-store": "^1.5.3",
		"redux-persist": "^6.0.0",
		"redux-promise-middleware": "^5.1.1",
		"redux-thunk": "^2.3.0",
		"reselect": "^4.0.0",
		"shortid": "^2.2.14",
		"sort-by": "^1.2.0",
		"svg-inline-react": "^3.2.0",
		"validator": "^11.1.0",
		"websocket": "^1.0.29",
		"whatwg-fetch": "^3.0.0",
		"xlsx": "^0.15.5",
		"yup": "^0.27.0"
	},
	"devDependencies": {
		"@babel/core": "^7.4.3",
		"@babel/plugin-proposal-export-default-from": "^7.5.2",
		"@storybook/addon-actions": "^5.3.19",
		"@storybook/addon-links": "^5.3.19",
		"@storybook/addon-storysource": "^5.3.19",
		"@storybook/addon-viewport": "^5.3.19",
		"@storybook/addons": "^5.3.19",
		"@storybook/preset-create-react-app": "^3.0.1",
		"@storybook/react": "^5.3.19",
		"@testing-library/react": "^8.0.7",
		"@types/classnames": "^2.2.9",
		"@types/jest": "^25.1.1",
		"@types/lodash": "^4.14.149",
		"@types/node-fetch": "^2.5.8",
		"@types/react-dom": "^16.8.5",
		"@types/react-input-mask": "^2.0.5",
		"@types/react-redux": "^7.1.1",
		"@types/react-router-dom": "^4.3.4",
		"babel-plugin-transform-decorators-legacy": "^1.3.5",
		"babel-plugin-transform-object-rest-spread": "^6.26.0",
		"bugsnag-sourcemaps": "^1.2.1",
		"cmdmix": "^2.0.1",
		"cypress-plugin-retries": "^1.5.0",
		"git-branch-is": "^3.0.0",
		"hjson": "^3.1.2",
		"husky": "4.0.10",
		"lint-staged": "^10.0.0-0",
		"mkdirp": "^0.5.1",
		"mocha": "7.0.0",
		"npm-run-all": "^4.1.5",
		"prettier": "2.0.1",
		"react-hook-form-devtools": "^1.2.0",
		"rexreplace": "^5.1.5",
		"serve": "^11.1.0",
		"shx": "^0.3.2",
		"storybook-addon-intl": "^2.4.1",
		"typescript": "3.7.5",
		"version-bump-prompt": "^5.0.5"
	},
	"peerDependencies": {
		"cypress": "3.4.1"
	},
	"prettier": {
		"useTabs": true,
		"printWidth": 100,
		"singleQuote": true,
		"bracketSpacing": false
	},
	"lint-staged": {
		"*.{scss,css,js,ts,vue,html,json,jsx,tsx}": [
			"prettier --write"
		]
	},
	"husky": {
		"hooks": {
			"pre-commit": "lint-staged",
			"post-commit": "(git symbolic-ref --short HEAD -q && yarn rebase) || exit 1",
			"pre-push": "yarn test-format || (echo Please use 'yarn format' to format files && exit 1)",
			"post-push": "#echo 'Its pushed - now see if we need to create cards on any of this:' && yarn todo"
		}
	},
	"browserslist": [
		">0.2%",
		"not dead",
		"not ie <= 10"
	]
}
